<caret_1>:
  KtNameReferenceExpression(308,311): 'foo'
    KaSuccessCallInfo:
      call = KaSimpleVariableAccessCall:
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = KaExplicitReceiverValue:
            expression = kotlinClass
            isSafeNavigation = false
            type = KotlinClass
          extensionReceiver = null
          signature = KaVariableSignature:
            name = foo
            receiverType = null
            returnType = Foo<kotlin.Any>
            symbol = var foo: Foo<kotlin.Any>
            contextParameters = []
            callableId = /KotlinClass.foo
        simpleAccess = Read
        typeArgumentsMapping = {}

<caret_2>:
  KtNameReferenceExpression(329,332): 'foo'
    KaSuccessCallInfo:
      call = KaSimpleVariableAccessCall:
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = KaExplicitReceiverValue:
            expression = kotlinClass
            isSafeNavigation = false
            type = KotlinClass
          extensionReceiver = null
          signature = KaVariableSignature:
            name = foo
            receiverType = null
            returnType = Foo<kotlin.Any>
            symbol = var foo: Foo<kotlin.Any>
            contextParameters = []
            callableId = /KotlinClass.foo
        simpleAccess = Write:
          value = foo
        typeArgumentsMapping = {}

<caret_3>:
  KtNameReferenceExpression(456,459): 'foo'
    KaSuccessCallInfo:
      call = KaSimpleVariableAccessCall:
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = KaSmartCastedReceiverValue:
            original = KaExplicitReceiverValue:
              expression = javaClass
              isSafeNavigation = false
              type = JavaClass<T>
            type = it(KotlinClass & JavaClass<T>)
          extensionReceiver = null
          signature = KaVariableSignature:
            name = foo
            receiverType = null
            returnType = it(Foo<kotlin.Any> & Foo<T!>)
            symbol = var foo: it(Foo<kotlin.Any> & Foo<T!>)
            contextParameters = []
            callableId = /KotlinClass.foo
        simpleAccess = Read
        typeArgumentsMapping = {}